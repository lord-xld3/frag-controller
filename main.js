(()=>{"use strict";(()=>{const n=function(n,e){const t=n.getContext("webgl2",e);if(!t)throw new Error("WebGL2 is not supported");function r(n,e){const r=t.createShader(n);if(t.shaderSource(r,e),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS))throw new Error(t.getShaderInfoLog(r));return r}return t.resize=n instanceof HTMLCanvasElement?function(e=n.clientWidth,r=n.clientHeight,i=0,o=0){t.canvas.width=e,t.canvas.height=r,t.viewport(i,o,e,r)}:function(e=n.width,r=n.height){t.canvas.width=e,t.canvas.height=r,t.viewport(0,0,e,r)},t.newProgram=(n,e)=>{const i=t.createProgram(),o=r(t.VERTEX_SHADER,n),a=r(t.FRAGMENT_SHADER,e);if(t.attachShader(i,o),t.attachShader(i,a),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw new Error(t.getProgramInfoLog(i));return i},t.useSSQ=n=>{const e=t.newProgram("#version 300 es\nin vec2 a;void main(){gl_Position=vec4(a,0,1);}",n);t.useProgram(e);const r=t.getAttribLocation(e,"a");return t.bindBuffer(t.ARRAY_BUFFER,t.createBuffer()),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),t.STATIC_DRAW),t.enableVertexAttribArray(r),t.vertexAttribPointer(r,2,t.FLOAT,!1,0,0),e},t.drawSSQ=()=>t.drawArrays(t.TRIANGLES,0,6),t.bindUniforms=(n,e,r=new Float32Array(0),i=0,o=t.STATIC_DRAW)=>{const a=t.getUniformBlockIndex(n,e);a===t.INVALID_INDEX&&console.warn(`Uniform block "${e}" not found in program: ${n}`);const c=function(n,e){const r=t.createBuffer();return r||console.warn(`Failed to create BufferObject using context: ${t}\n                Target: ${n}\n                Usage: ${e}`),{buf:r,bind(){t.bindBuffer(n,r)},unbind(){t.bindBuffer(n,null)},delete(){t.deleteBuffer(r)},setBuffer(r){t.bufferData(n,r,e)}}}(t.UNIFORM_BUFFER,o),s=function(n,e){const t=n.byteLength+e-1&~(e-1),r=new n.constructor(t);return r.set(n),r}(r,16);function l(e){t.uniformBlockBinding(n,a,e)}function f(){c.bind(),t.bindBufferBase(t.UNIFORM_BUFFER,a,c.buf)}function d(n,e=0,t=0,r=n.length){s.set(n.slice(t,r),e)}function u(){c.setBuffer(s)}return f(),l(i),d(r),u(),Object.assign(Object.assign({},c),{bindBlock:l,bind:f,unbind:function(){t.bindBufferBase(t.UNIFORM_BUFFER,a,null),c.unbind()},set:d,flush:u})},t}(document.getElementById("canvas")),e=n.useSSQ("#version 300 es\nprecision highp float;\nprecision highp int;\n\n#define f gl_FragCoord.xy\n#define P 3.1415926535897932384626433832795\n\nuniform U {\n    vec2 C; // coords\n    vec2 D; // mouse delta\n    vec2 R; // resolution\n    float Z; // zoom\n    float N; // max iterations - min iterations\n    float J; // min iterations\n    float L; // max escape radius - min escape radius\n    float F; // min escape radius\n    float Y; // max zoom\n};\n\nout vec4 o;\n\nvoid main() {\n    float m = exp(Z),\n        W = 1./(m*R.y),\n        e = L * W + F;\n\n    int h = int(N * pow(Z/Y, 2.) + J),\n        i = 0;\n        \n    vec2 n = (2.*f - R)*W + D,\n        p = n,\n        z = n*n;\n    \n    while (i < h && z.x < e) {\n        n = vec2(z.x - z.y + p.x, 2.*n.x*n.y + p.y),\n        z = n*n,\n        ++i;\n    }\n    o = (i < h) ? vec4(.5 + .5 * cos(4. + (float(i) + 1. - log2(log2(dot(n, n)) / log2(e))) * .1 + vec3(5, 6, 7)), 1) : vec4(0);\n}");n.canvas.addEventListener("resize",(()=>n.resize())),n.resize();const t=n.bindUniforms(e,"U",new Float32Array([0,0,0,0,n.canvas.width,n.canvas.height,1,400,80,9e3,6,12]));t.bind(),function(n,e,t,r,i,o){let a=0,c=1,s=0,l=0,f=0;n.addEventListener("pointerdown",(d=>{let u=[d.clientX,d.clientY],g=!0;a++;const h=o=>{2===a?e.set(new Float32Array([c+=.001*Math.hypot(o.clientX-u[0],o.clientY-u[1])]),i):(e.set(new Uint32Array([o.clientX,o.clientY]),t),f=Math.exp(c),s-=(o.clientX-u[0])/n.clientWidth/f,l+=(o.clientY-u[1])/n.clientHeight/f,u=[o.clientX,o.clientY],e.set(new Float32Array([s,l]),r))},m=()=>{--a<3&&(g=!0),n.removeEventListener("pointermove",h),n.removeEventListener("pointerup",m)};3===a&&g&&(o(d),g=!1),n.addEventListener("pointermove",h),n.addEventListener("pointerup",m)})),n.addEventListener("pointercancel",(()=>a=0)),n.addEventListener("wheel",(t=>{c-=t.deltaY/n.clientHeight,console.log(c),e.set(new Float32Array([c]),i)}))}(n.canvas,t,0,2,6,(()=>{console.log("Triple tap!")})),n.useProgram(e),n.clearColor(0,0,0,1),requestAnimationFrame((function e(){n.clear(n.COLOR_BUFFER_BIT),t.flush(),n.drawSSQ(),requestAnimationFrame(e)}))})()})();