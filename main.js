(()=>{"use strict";(()=>{function n(n,e,t,o){const i=1/n.clientHeight;let r=[],a=t,s=0,c=0,l=Math.exp(-a),u=0;function d(n,t){e.set(new Uint32Array([n,t]),0)}function f(n,t){s=n,c=t,e.set(new Float32Array([n,t]),16)}function m(n){e.set(new Float32Array([n]),28)}return Object.assign(Object.assign({},function(n,e=(()=>{}),t=(()=>{}),o=(()=>{}),i=(()=>{})){return{bind:()=>{n.onpointerdown=e,n.onpointermove=t,n.onpointerup=o,n.onpointercancel=o,n.onpointerout=o,n.onpointerleave=o,n.addEventListener("wheel",i,{passive:!0})},unbind:()=>{n.onpointerdown=null,n.onpointermove=null,n.onpointerup=null,n.onpointercancel=null,n.onpointerout=null,n.onpointerleave=null,n.onwheel=null}}}(n,(function(e){r.push(e),1===r.length&&n.setPointerCapture(e.pointerId),3===r.length&&o(e),d(e.clientX,e.clientY)}),(function(n){let e=r.findIndex((e=>e.pointerId===n.pointerId));if(r[e]=n,1===r.length&&(d(n.clientX,n.clientY),f(s-=n.movementX*i*l*2,c+=n.movementY*i*l*2)),2===r.length&&n.isPrimary){const[n,e]=r,t=Math.hypot(n.clientX-e.clientX,n.clientY-e.clientY);u&&(a+=(t-u)*i*4,l=Math.exp(-a),m(a)),u=t}}),(function(e){r=r.filter((n=>n.pointerId!==e.pointerId)),r.length<2&&(u=0),n.releasePointerCapture(e.pointerId)}),(function(n){a-=n.deltaY*i,l=Math.exp(-a),m(a)}))),{setCoords:d,setDelta:f,setResolution:function(n,t){e.set(new Uint32Array([n,t]),8)},setTime:function(n){e.set(new Float32Array([n]),24)},setZoom:m})}function e(n,e,t=0,o=1,i=0,r=1){const a=Object.assign(document.createElement("div"),{className:"overlay"}),s=Object.assign(document.createElement("label"),{textContent:e}),c=Object.assign(document.createElement("input"),{type:"range",id:e,name:e,step:o.toString(),min:i.toString(),max:r.toString(),value:t.toString()}),l=Object.assign(document.createElement("span"),{className:"tooltip",id:`${e}-tooltip`,textContent:t.toString()});return s.setAttribute("for",e),c.addEventListener("input",(()=>{l.textContent=c.value})),a.append(s,c,l),n.appendChild(a),c}const t=function(e,t){const o=e.getContext("webgl2",t);if(!o)throw new Error("WebGL2 is not supported");function i(n,e){const t=o.createShader(n);if(o.shaderSource(t,e),o.compileShader(t),!o.getShaderParameter(t,o.COMPILE_STATUS))throw new Error(o.getShaderInfoLog(t));return t}return o.resize=e instanceof HTMLCanvasElement?function(n=e.clientWidth,t=e.clientHeight,i=0,r=0){o.canvas.width=n,o.canvas.height=t,o.viewport(i,r,n,t)}:function(n=e.width,t=e.height){o.canvas.width=n,o.canvas.height=t,o.viewport(0,0,n,t)},o.newProgram=(n,e)=>{const t=o.createProgram(),r=i(o.VERTEX_SHADER,n),a=i(o.FRAGMENT_SHADER,e);if(o.attachShader(t,r),o.attachShader(t,a),o.linkProgram(t),!o.getProgramParameter(t,o.LINK_STATUS))throw new Error(o.getProgramInfoLog(t));return t},o.useSSQ=n=>{const e=o.newProgram("#version 300 es\nin vec2 a;void main(){gl_Position=vec4(a,0,1);}",n);o.useProgram(e);const t=o.getAttribLocation(e,"a");return o.bindBuffer(o.ARRAY_BUFFER,o.createBuffer()),o.bufferData(o.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),o.STATIC_DRAW),o.enableVertexAttribArray(t),o.vertexAttribPointer(t,2,o.FLOAT,!1,0,0),e},o.drawSSQ=()=>o.drawArrays(o.TRIANGLES,0,6),o.bindUniforms=(n,e,t=0,i=o.STATIC_DRAW)=>{const r=o.getUniformBlockIndex(n,e);function a(e){o.uniformBlockBinding(n,r,e)}function s(){l.bind(),o.bindBufferBase(o.UNIFORM_BUFFER,r,l.buf)}function c(){s(),l.setBuffer(u)}r===o.INVALID_INDEX&&console.warn(`Uniform block "${e}" not found in program: `,n);const l=function(n,e){const t=o.createBuffer();return t||console.warn(`Failed to create BufferObject using context: ${o}\n                Target: ${n}\n                Usage: ${e}`),{buf:t,bind(){o.bindBuffer(n,t)},unbind(){o.bindBuffer(n,null)},delete(){o.deleteBuffer(t)},setBuffer(t){o.bufferData(n,t,e)}}}(o.UNIFORM_BUFFER,i);a(t);const u=new ArrayBuffer(o.getActiveUniformBlockParameter(n,r,o.UNIFORM_BLOCK_DATA_SIZE));return c(),{delete:l.delete,bindBlock:a,bind:s,unbind:function(){o.bindBufferBase(o.UNIFORM_BUFFER,r,null),l.unbind()},set:function(n,e=0,t=0,o=n.length){new n.constructor(u,e,o).set(n,t)},flush:c}},o.bindTouch=function(e,t,i,r=1,a=0,s=(()=>{})){const c=o.bindUniforms(t,i,a);return[n(e,c,r,s),c]},o}(document.getElementById("canvas")),o=t.canvas,i=t.useSSQ("#version 300 es\nprecision highp float;\nprecision highp int;\n\n#define f gl_FragCoord.xy\n\nuniform I {\n    uvec2 iMouse, iResolution;\n    vec2 iDelta;\n    float iTime, iZoom;\n};\n\nuniform U {\n    uvec2 J; // iteration range\n    vec2 E; // escape radius range\n    vec3 C; // color\n};\n\nout vec4 o;\n\nconst float Y = 12.; // Max zoom\n\nvoid main() {\n    vec2 r = vec2(iResolution);\n\n    float W = 1./(exp(iZoom)*r.y),\n        F = E.y * W + E.x,\n        K = float(J.y - J.x);\n\n    vec2 n = (2.*f - r)*W + iDelta,\n        p = n,\n        z = n*n;\n\n    int i = 0,\n        H = int(K * pow(iZoom/Y, 2.)) + int(J.x);\n    \n    while (i < H && z.x < F) {\n        n = vec2(z.x - z.y + p.x, 2.*n.x*n.y + p.y),\n        z = n*n,\n        ++i;\n    }\n    o = (i < H) ? vec4(.5 + .5 * cos(4. + (float(i) + 1. - log2(log2(dot(n, n)) / log2(F))) * .1 + C), 1) : vec4(0);\n}"),r=document.getElementById("panel"),a=e(r,"Min Iterations",80,1,1,400),s=e(r,"Max Iterations",400,1,80,1e3),c=e(r,"Min Escape Radius",6,1e-4,0,10),l=e(r,"Max Escape Radius",5e3,1e-4,6,1e4),u=e(r,"Hue",.6,1e-4,0,1),[d,f]=t.bindTouch(o,i,"I",.01,0,(()=>{r.style.display="none"===r.style.display?"block":"none"}));d.bind(),d.setCoords(-.75,0),d.setDelta(-.75,0),o.ondblclick=()=>{r.style.display="none"===r.style.display?"block":"none"},window.onresize=function(){t.resize(),d.setResolution(o.width,o.height)},window.dispatchEvent(new Event("resize")),f.flush();const m=t.bindUniforms(i,"U",1);m.set(new Uint32Array([80,400])),m.set(new Float32Array([6,5e3,Math.cos(.6*Math.PI*2),Math.cos(.6*Math.PI*2+1),Math.cos(.6*Math.PI*2+2)]),8),m.flush(),a.addEventListener("input",(()=>{s.min=a.value,m.set(new Uint32Array([a.valueAsNumber]),0)})),s.addEventListener("input",(()=>{a.max=s.value,m.set(new Uint32Array([s.valueAsNumber]),4)})),c.addEventListener("input",(()=>{l.min=c.value,m.set(new Float32Array([c.valueAsNumber]),8)})),l.addEventListener("input",(()=>{m.set(new Float32Array([l.valueAsNumber]),12)})),u.addEventListener("input",(()=>{const n=u.valueAsNumber*Math.PI*2;m.set(new Float32Array([Math.cos(n),Math.cos(n+1),Math.cos(n+2)]),16)})),t.useProgram(i),t.clearColor(0,0,0,1),requestAnimationFrame((function n(){t.clear(t.COLOR_BUFFER_BIT),m.flush(),f.flush(),t.drawSSQ(),requestAnimationFrame(n)}))})()})();